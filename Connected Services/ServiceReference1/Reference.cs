//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWebsite.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_CellNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_CellNum {
            get {
                return this.User_CellNumField;
            }
            set {
                if ((object.ReferenceEquals(this.User_CellNumField, value) != true)) {
                    this.User_CellNumField = value;
                    this.RaisePropertyChanged("User_CellNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_Email {
            get {
                return this.User_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.User_EmailField, value) != true)) {
                    this.User_EmailField = value;
                    this.RaisePropertyChanged("User_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_Name {
            get {
                return this.User_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.User_NameField, value) != true)) {
                    this.User_NameField = value;
                    this.RaisePropertyChanged("User_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_Password {
            get {
                return this.User_PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.User_PasswordField, value) != true)) {
                    this.User_PasswordField = value;
                    this.RaisePropertyChanged("User_Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_Surname {
            get {
                return this.User_SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.User_SurnameField, value) != true)) {
                    this.User_SurnameField = value;
                    this.RaisePropertyChanged("User_Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_Type {
            get {
                return this.User_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.User_TypeField, value) != true)) {
                    this.User_TypeField = value;
                    this.RaisePropertyChanged("User_Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICleanService")]
    public interface ICleanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICleanService/DoWork", ReplyAction="http://tempuri.org/ICleanService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICleanService/DoWork", ReplyAction="http://tempuri.org/ICleanService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICleanService/AddUser", ReplyAction="http://tempuri.org/ICleanService/AddUserResponse")]
        bool AddUser(string name, string surname, string cellnum, string email, string password, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICleanService/AddUser", ReplyAction="http://tempuri.org/ICleanService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(string name, string surname, string cellnum, string email, string password, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICleanService/GetUser", ReplyAction="http://tempuri.org/ICleanService/GetUserResponse")]
        TestWebsite.ServiceReference1.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICleanService/GetUser", ReplyAction="http://tempuri.org/ICleanService/GetUserResponse")]
        System.Threading.Tasks.Task<TestWebsite.ServiceReference1.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICleanService/Login", ReplyAction="http://tempuri.org/ICleanService/LoginResponse")]
        int Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICleanService/Login", ReplyAction="http://tempuri.org/ICleanService/LoginResponse")]
        System.Threading.Tasks.Task<int> LoginAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICleanServiceChannel : TestWebsite.ServiceReference1.ICleanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CleanServiceClient : System.ServiceModel.ClientBase<TestWebsite.ServiceReference1.ICleanService>, TestWebsite.ServiceReference1.ICleanService {
        
        public CleanServiceClient() {
        }
        
        public CleanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CleanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CleanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CleanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public bool AddUser(string name, string surname, string cellnum, string email, string password, string type) {
            return base.Channel.AddUser(name, surname, cellnum, email, password, type);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(string name, string surname, string cellnum, string email, string password, string type) {
            return base.Channel.AddUserAsync(name, surname, cellnum, email, password, type);
        }
        
        public TestWebsite.ServiceReference1.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<TestWebsite.ServiceReference1.User> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public int Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
    }
}
